{"version":3,"sources":["../../src/util/presenter.js"],"names":["_","Presenter","options","box","color","_colorFor","colorValue","value","thresholds","concat","sort","a","b","threshold","find","defaultColor"],"mappings":";;;;;;;;;;;;;;;AAAOA,O;;;;;;;;;;;;;;;;;;;;;2BAEMC,S;AACX,2BAAaC,OAAb,EAAsB;AAAA;;AACpB,eAAKA,OAAL,GAAeA,OAAf;AACD;;;;+BAEKC,G,EAAK;AACTA,gBAAIC,KAAJ,GAAY,KAAKC,SAAL,CAAeF,IAAIG,UAAnB,CAAZ;AACD;;;oCAEUC,K,EAAO;AAChB,gBAAIC,aAAa,KAAKN,OAAL,CAAaM,UAAb,CAAwBC,MAAxB,GAAiCC,IAAjC,CAAsC,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAUA,EAAEL,KAAF,GAAUI,EAAEJ,KAAtB;AAAA,aAAtC,CAAjB;AACA,gBAAIM,YAAYb,EAAEc,IAAF,CAAON,UAAP,EAAmB,UAACK,SAAD;AAAA,qBAAeN,SAASM,UAAUN,KAAlC;AAAA,aAAnB,CAAhB;AACA,mBAAOM,YAAYA,UAAUT,KAAtB,GAA8B,KAAKF,OAAL,CAAaa,YAAlD;AACD","file":"presenter.js","sourcesContent":["import _ from 'lodash'\n\nexport class Presenter {\n  constructor (options) {\n    this.options = options\n  }\n\n  call (box) {\n    box.color = this._colorFor(box.colorValue)\n  }\n\n  _colorFor (value) {\n    var thresholds = this.options.thresholds.concat().sort((a, b) => b.value - a.value)\n    var threshold = _.find(thresholds, (threshold) => value >= threshold.value)\n    return threshold ? threshold.color : this.options.defaultColor\n  }\n}\n"]}