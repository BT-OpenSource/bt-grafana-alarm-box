{"version":3,"sources":["../src/module.js"],"names":["_","MetricsPanelCtrl","Builder","Presenter","Linker","panelDefaults","defaultColor","numberSize","linkIndex","thresholds","titleSize","mathScratchPad","mathDisplayValue","mathColorValue","AlarmBoxCtrl","$scope","$injector","linkSrv","defaults","panel","events","on","onInitEditMode","bind","onDataReceived","onRender","builder","presenter","linker","box","addEditorTab","seriesList","render","call","panelContainer","css","color","panelTitle","push","value","index","splice","scope","elem","attrs","ctrl","find","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACOA,O;;AACCC,sB,kBAAAA,gB;;AACAC,a,gBAAAA,O;;AACAC,e,kBAAAA,S;;AACAC,Y,eAAAA,M;;;;;;;;;;;;;;;;;;;;;AAEFC,mB,GAAgB;AACpBC,sBAAc,oBADM;AAEpBC,oBAAY,MAFQ;AAGpBC,mBAAW,CAHS;AAIpBC,oBAAY,EAJQ;AAKpBC,mBAAW,MALS;AAMpBC,wBAAgB,sDANI;AAOpBC,0BAAkB,OAPE;AAQpBC,wBAAgB;AARI,O;;mDAWTC,Y;;;AACX,8BAAaC,MAAb,EAAqBC,SAArB,EAAgCC,OAAhC,EAAyC;AAAA;;AAAA,kIACjCF,MADiC,EACzBC,SADyB;;AAEvChB,YAAEkB,QAAF,CAAW,MAAKC,KAAhB,EAAuBd,aAAvB;;AAEA,gBAAKe,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKC,cAAL,CAAoBC,IAApB,OAAjC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKG,cAAL,CAAoBD,IAApB,OAAhC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,MAAKI,QAAL,CAAcF,IAAd,OAAzB;;AAEA,gBAAKG,OAAL,GAAe,IAAIxB,OAAJ,CAAY,MAAKiB,KAAjB,CAAf;AACA,gBAAKQ,SAAL,GAAiB,IAAIxB,SAAJ,CAAc,MAAKgB,KAAnB,CAAjB;AACA,gBAAKS,MAAL,GAAc,IAAIxB,MAAJ,CAAW,MAAKe,KAAhB,EAAuBF,OAAvB,CAAd;;AAEA,gBAAKY,GAAL,GAAW,EAAX;AAZuC;AAaxC;;;;2CAEiB;AAChB,iBAAKC,YAAL,CAAkB,SAAlB,EAA6B,kDAA7B;AACA,iBAAKA,YAAL,CAAkB,QAAlB,EAA4B,kDAA5B;AACD;;;yCAEeC,U,EAAY;AAC1B,iBAAKA,UAAL,GAAkBA,UAAlB;AACA,iBAAKC,MAAL;AACD;;;qCAEW;AACV,iBAAKH,GAAL,GAAW,KAAKH,OAAL,CAAaO,IAAb,CAAkB,KAAKF,UAAvB,CAAX;AACA,iBAAKJ,SAAL,CAAeM,IAAf,CAAoB,KAAKJ,GAAzB;AACA,iBAAKD,MAAL,CAAYK,IAAZ,CAAiB,KAAKJ,GAAtB;;AAEA,iBAAKK,cAAL,CAAoBC,GAApB,CAAwB,kBAAxB,EAA4C,KAAKN,GAAL,CAASO,KAArD;AACA,iBAAKC,UAAL,CAAgBF,GAAhB,CAAoB,WAApB,EAAiC,KAAKhB,KAAL,CAAWT,SAA5C;AACD;;;iDAEuB;AACtB,iBAAKS,KAAL,CAAWV,UAAX,CAAsB6B,IAAtB,CAA2B,EAAEC,OAAO,CAAT,EAAYH,OAAO,KAAKjB,KAAL,CAAWb,YAA9B,EAA3B;AACA,iBAAK0B,MAAL;AACD;;;kDAEwBQ,K,EAAO;AAC9B,iBAAKrB,KAAL,CAAWV,UAAX,CAAsBgC,MAAtB,CAA6BD,KAA7B,EAAoC,CAApC;AACA,iBAAKR,MAAL;AACD;;;+BAEKU,K,EAAOC,I,EAAMC,K,EAAOC,I,EAAM;AAC9B,iBAAKX,cAAL,GAAsBS,KAAKG,IAAL,CAAU,kBAAV,CAAtB;AACA,iBAAKT,UAAL,GAAkBM,KAAKG,IAAL,CAAU,cAAV,CAAlB;AACD;;;;QAhD+B7C,gB;;;;AAmDlCa,mBAAaiC,WAAb,GAA2B,aAA3B;;2BACSjC,Y","file":"module.js","sourcesContent":["import './module.css!'\nimport _ from 'lodash'\nimport {MetricsPanelCtrl} from 'app/plugins/sdk'\nimport {Builder} from './util/builder'\nimport {Presenter} from './util/presenter'\nimport {Linker} from './util/linker'\n\nconst panelDefaults = {\n  defaultColor: 'rgb(117, 117, 117)',\n  numberSize: '32px',\n  linkIndex: 0,\n  thresholds: [],\n  titleSize: '18px',\n  mathScratchPad: 'count = sum(map(data, f(x) = size(x.datapoints)[1]))',\n  mathDisplayValue: 'count',\n  mathColorValue: 'count'\n}\n\nexport class AlarmBoxCtrl extends MetricsPanelCtrl {\n  constructor ($scope, $injector, linkSrv) {\n    super($scope, $injector)\n    _.defaults(this.panel, panelDefaults)\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this))\n    this.events.on('data-received', this.onDataReceived.bind(this))\n    this.events.on('render', this.onRender.bind(this))\n\n    this.builder = new Builder(this.panel)\n    this.presenter = new Presenter(this.panel)\n    this.linker = new Linker(this.panel, linkSrv)\n\n    this.box = {}\n  }\n\n  onInitEditMode () {\n    this.addEditorTab('Options', 'public/plugins/btplc-alarm-box-panel/editor.html')\n    this.addEditorTab('Values', 'public/plugins/btplc-alarm-box-panel/values.html')\n  }\n\n  onDataReceived (seriesList) {\n    this.seriesList = seriesList\n    this.render()\n  }\n\n  onRender () {\n    this.box = this.builder.call(this.seriesList)\n    this.presenter.call(this.box)\n    this.linker.call(this.box)\n\n    this.panelContainer.css('background-color', this.box.color)\n    this.panelTitle.css('font-size', this.panel.titleSize)\n  }\n\n  onEditorAddThreshold () {\n    this.panel.thresholds.push({ value: 0, color: this.panel.defaultColor })\n    this.render()\n  }\n\n  onEditorRemoveThreshold (index) {\n    this.panel.thresholds.splice(index, 1)\n    this.render()\n  }\n\n  link (scope, elem, attrs, ctrl) {\n    this.panelContainer = elem.find('.panel-container')\n    this.panelTitle = elem.find('.panel-title')\n  }\n}\n\nAlarmBoxCtrl.templateUrl = 'module.html'\nexport { AlarmBoxCtrl as PanelCtrl }\n"]}