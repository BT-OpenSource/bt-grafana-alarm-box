{"version":3,"sources":["../src/module.js"],"names":["_","MetricsPanelCtrl","Builder","Presenter","panelDefaults","defaultColor","numberSize","thresholds","titleSize","mathScratchPad","mathDisplayValue","mathColorValue","AlarmBoxCtrl","$scope","$injector","linkSrv","defaults","panel","events","on","onInitEditMode","bind","onDataReceived","onRender","builder","presenter","box","addEditorTab","seriesList","render","call","panelContainer","css","color","panelTitle","boxContainer","toggleClass","links","length","push","value","index","splice","linkInfo","getPanelLinkAnchorInfo","scopedVars","target","window","open","href","location","scope","elem","attrs","ctrl","find","onClick","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["import './module.css!'\nimport _ from 'lodash'\nimport {MetricsPanelCtrl} from 'app/plugins/sdk'\nimport {Builder} from './util/builder'\nimport {Presenter} from './util/presenter'\n\nconst panelDefaults = {\n  defaultColor: 'rgb(117, 117, 117)',\n  numberSize: '32px',\n  thresholds: [],\n  titleSize: '18px',\n  mathScratchPad: 'count = sum(map(data, f(x) = size(x.datapoints)[1]))',\n  mathDisplayValue: 'count',\n  mathColorValue: 'count'\n}\n\nexport class AlarmBoxCtrl extends MetricsPanelCtrl {\n  constructor ($scope, $injector, linkSrv) {\n    super($scope, $injector)\n    _.defaults(this.panel, panelDefaults)\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this))\n    this.events.on('data-received', this.onDataReceived.bind(this))\n    this.events.on('render', this.onRender.bind(this))\n\n    this.builder = new Builder(this.panel)\n    this.presenter = new Presenter(this.panel)\n\n    this.box = {}\n    this.linkSrv = linkSrv\n  }\n\n  onInitEditMode () {\n    this.addEditorTab('Options', 'public/plugins/btplc-alarm-box-panel/editor.html')\n    this.addEditorTab('Values', 'public/plugins/btplc-alarm-box-panel/values.html')\n  }\n\n  onDataReceived (seriesList) {\n    this.seriesList = seriesList\n    this.render()\n  }\n\n  onRender () {\n    this.box = this.builder.call(this.seriesList)\n    this.presenter.call(this.box)\n\n    this.panelContainer.css('background-color', this.box.color)\n    this.panelTitle.css('font-size', this.panel.titleSize)\n    this.boxContainer.toggleClass('pointer', this.panel.links && this.panel.links.length > 0)\n  }\n\n  onEditorAddThreshold () {\n    this.panel.thresholds.push({ value: 0, color: this.panel.defaultColor })\n    this.render()\n  }\n\n  onEditorRemoveThreshold (index) {\n    this.panel.thresholds.splice(index, 1)\n    this.render()\n  }\n\n  onClick () {\n    if (this.panel.links === null) return\n    if (this.panel.links.length === 0) return\n\n    var linkInfo = this.linkSrv.getPanelLinkAnchorInfo(\n      this.panel.links[0], this.panel.scopedVars)\n\n    if (linkInfo.target === '_blank') {\n      window.open(linkInfo.href, '_blank')\n    } else {\n      window.location.href = '/' + linkInfo.href\n    }\n  }\n\n  link (scope, elem, attrs, ctrl) {\n    this.panelContainer = elem.find('.panel-container')\n    this.boxContainer = elem.find('.box')\n    this.panelTitle = elem.find('.panel-title')\n    this.boxContainer.on('click', this.onClick.bind(this))\n  }\n}\n\nAlarmBoxCtrl.templateUrl = 'module.html'\nexport { AlarmBoxCtrl as PanelCtrl }\n"]}